(function () { var n = this; var r = n._; var t = {}; var e = Array.prototype, u = Object.prototype, i = Function.prototype; var a = e.push, f = e.slice, l = e.concat, o = u.toString, c = u.hasOwnProperty; var s = e.forEach, p = e.map, v = e.reduce, h = e.reduceRight, g = e.filter, m = e.every, y = e.some, d = e.indexOf, w = e.lastIndexOf, b = Array.isArray, x = Object.keys, _ = i.bind; var j = function (n) { if (n instanceof j) return n; if (!(this instanceof j)) return new j(n); this._wrapped = n }; if ("undefined" !== typeof exports) { if ("undefined" !== typeof module && module.exports) exports = module.exports = j; exports._ = j } else n._ = j; j.VERSION = "1.6.0"; var A = j.each = j.forEach = function (n, r, e) { if (null == n) return n; if (s && n.forEach === s) n.forEach(r, e); else if (n.length === +n.length) { for (var u = 0, i = n.length; u < i; u++)if (r.call(e, n[u], u, n) === t) return } else { var a = j.keys(n); for (var u = 0, i = a.length; u < i; u++)if (r.call(e, n[a[u]], a[u], n) === t) return } return n }; j.map = j.collect = function (n, r, t) { var e = []; if (null == n) return e; if (p && n.map === p) return n.map(r, t); A(n, function (n, u, i) { e.push(r.call(t, n, u, i)) }); return e }; var k = "Reduce of empty array with no initial value"; j.reduce = j.foldl = j.inject = function (n, r, t, e) { var u = arguments.length > 2; if (null == n) n = []; if (v && n.reduce === v) { if (e) r = j.bind(r, e); return u ? n.reduce(r, t) : n.reduce(r) } A(n, function (n, i, a) { if (!u) { t = n; u = true } else t = r.call(e, t, n, i, a) }); if (!u) throw new TypeError(k); return t }; j.reduceRight = j.foldr = function (n, r, t, e) { var u = arguments.length > 2; if (null == n) n = []; if (h && n.reduceRight === h) { if (e) r = j.bind(r, e); return u ? n.reduceRight(r, t) : n.reduceRight(r) } var i = n.length; if (i !== +i) { var a = j.keys(n); i = a.length } A(n, function (f, l, o) { l = a ? a[--i] : --i; if (!u) { t = n[l]; u = true } else t = r.call(e, t, n[l], l, o) }); if (!u) throw new TypeError(k); return t }; j.find = j.detect = function (n, r, t) { var e; O(n, function (n, u, i) { if (r.call(t, n, u, i)) { e = n; return true } }); return e }; j.filter = j.select = function (n, r, t) { var e = []; if (null == n) return e; if (g && n.filter === g) return n.filter(r, t); A(n, function (n, u, i) { if (r.call(t, n, u, i)) e.push(n) }); return e }; j.reject = function (n, r, t) { return j.filter(n, function (n, e, u) { return !r.call(t, n, e, u) }, t) }; j.every = j.all = function (n, r, e) { r || (r = j.identity); var u = true; if (null == n) return u; if (m && n.every === m) return n.every(r, e); A(n, function (n, i, a) { if (!(u = u && r.call(e, n, i, a))) return t }); return !!u }; var O = j.some = j.any = function (n, r, e) { r || (r = j.identity); var u = false; if (null == n) return u; if (y && n.some === y) return n.some(r, e); A(n, function (n, i, a) { if (u || (u = r.call(e, n, i, a))) return t }); return !!u }; j.contains = j.include = function (n, r) { if (null == n) return false; if (d && n.indexOf === d) return n.indexOf(r) != -1; return O(n, function (n) { return n === r }) }; j.invoke = function (n, r) { var t = f.call(arguments, 2); var e = j.isFunction(r); return j.map(n, function (n) { return (e ? r : n[r]).apply(n, t) }) }; j.pluck = function (n, r) { return j.map(n, j.property(r)) }; j.where = function (n, r) { return j.filter(n, j.matches(r)) }; j.findWhere = function (n, r) { return j.find(n, j.matches(r)) }; j.max = function (n, r, t) { if (!r && j.isArray(n) && n[0] === +n[0] && n.length < 65535) return Math.max.apply(Math, n); var e = -1 / 0, u = -1 / 0; A(n, function (n, i, a) { var f = r ? r.call(t, n, i, a) : n; if (f > u) { e = n; u = f } }); return e }; j.min = function (n, r, t) { if (!r && j.isArray(n) && n[0] === +n[0] && n.length < 65535) return Math.min.apply(Math, n); var e = 1 / 0, u = 1 / 0; A(n, function (n, i, a) { var f = r ? r.call(t, n, i, a) : n; if (f < u) { e = n; u = f } }); return e }; j.shuffle = function (n) { var r; var t = 0; var e = []; A(n, function (n) { r = j.random(t++); e[t - 1] = e[r]; e[r] = n }); return e }; j.sample = function (n, r, t) { if (null == r || t) { if (n.length !== +n.length) n = j.values(n); return n[j.random(n.length - 1)] } return j.shuffle(n).slice(0, Math.max(0, r)) }; var E = function (n) { if (null == n) return j.identity; if (j.isFunction(n)) return n; return j.property(n) }; j.sortBy = function (n, r, t) { r = E(r); return j.pluck(j.map(n, function (n, e, u) { return { value: n, index: e, criteria: r.call(t, n, e, u) } }).sort(function (n, r) { var t = n.criteria; var e = r.criteria; if (t !== e) { if (t > e || t === void 0) return 1; if (t < e || e === void 0) return -1 } return n.index - r.index }), "value") }; var F = function (n) { return function (r, t, e) { var u = {}; t = E(t); A(r, function (i, a) { var f = t.call(e, i, a, r); n(u, f, i) }); return u } }; j.groupBy = F(function (n, r, t) { j.has(n, r) ? n[r].push(t) : n[r] = [t] }); j.indexBy = F(function (n, r, t) { n[r] = t }); j.countBy = F(function (n, r) { j.has(n, r) ? n[r]++ : n[r] = 1 }); j.sortedIndex = function (n, r, t, e) { t = E(t); var u = t.call(e, r); var i = 0, a = n.length; while (i < a) { var f = i + a >>> 1; t.call(e, n[f]) < u ? i = f + 1 : a = f } return i }; j.toArray = function (n) { if (!n) return []; if (j.isArray(n)) return f.call(n); if (n.length === +n.length) return j.map(n, j.identity); return j.values(n) }; j.size = function (n) { if (null == n) return 0; return n.length === +n.length ? n.length : j.keys(n).length }; j.first = j.head = j.take = function (n, r, t) { if (null == n) return void 0; if (null == r || t) return n[0]; if (r < 0) return []; return f.call(n, 0, r) }; j.initial = function (n, r, t) { return f.call(n, 0, n.length - (null == r || t ? 1 : r)) }; j.last = function (n, r, t) { if (null == n) return void 0; if (null == r || t) return n[n.length - 1]; return f.call(n, Math.max(n.length - r, 0)) }; j.rest = j.tail = j.drop = function (n, r, t) { return f.call(n, null == r || t ? 1 : r) }; j.compact = function (n) { return j.filter(n, j.identity) }; var M = function (n, r, t) { if (r && j.every(n, j.isArray)) return l.apply(t, n); A(n, function (n) { if (j.isArray(n) || j.isArguments(n)) r ? a.apply(t, n) : M(n, r, t); else t.push(n) }); return t }; j.flatten = function (n, r) { return M(n, r, []) }; j.without = function (n) { return j.difference(n, f.call(arguments, 1)) }; j.partition = function (n, r, t) { r = E(r); var e = [], u = []; A(n, function (n) { (r.call(t, n) ? e : u).push(n) }); return [e, u] }; j.uniq = j.unique = function (n, r, t, e) { if (j.isFunction(r)) { e = t; t = r; r = false } var u = t ? j.map(n, t, e) : n; var i = []; var a = []; A(u, function (t, e) { if (r ? !e || a[a.length - 1] !== t : !j.contains(a, t)) { a.push(t); i.push(n[e]) } }); return i }; j.union = function () { return j.uniq(j.flatten(arguments, true)) }; j.intersection = function (n) { var r = f.call(arguments, 1); return j.filter(j.uniq(n), function (n) { return j.every(r, function (r) { return j.contains(r, n) }) }) }; j.difference = function (n) { var r = l.apply(e, f.call(arguments, 1)); return j.filter(n, function (n) { return !j.contains(r, n) }) }; j.zip = function () { var n = j.max(j.pluck(arguments, "length").concat(0)); var r = new Array(n); for (var t = 0; t < n; t++)r[t] = j.pluck(arguments, "" + t); return r }; j.object = function (n, r) { if (null == n) return {}; var t = {}; for (var e = 0, u = n.length; e < u; e++)if (r) t[n[e]] = r[e]; else t[n[e][0]] = n[e][1]; return t }; j.indexOf = function (n, r, t) { if (null == n) return -1; var e = 0, u = n.length; if (t) if ("number" == typeof t) e = t < 0 ? Math.max(0, u + t) : t; else { e = j.sortedIndex(n, r); return n[e] === r ? e : -1 } if (d && n.indexOf === d) return n.indexOf(r, t); for (; e < u; e++)if (n[e] === r) return e; return -1 }; j.lastIndexOf = function (n, r, t) { if (null == n) return -1; var e = null != t; if (w && n.lastIndexOf === w) return e ? n.lastIndexOf(r, t) : n.lastIndexOf(r); var u = e ? t : n.length; while (u--) if (n[u] === r) return u; return -1 }; j.range = function (n, r, t) { if (arguments.length <= 1) { r = n || 0; n = 0 } t = arguments[2] || 1; var e = Math.max(Math.ceil((r - n) / t), 0); var u = 0; var i = new Array(e); while (u < e) { i[u++] = n; n += t } return i }; var R = function () { }; j.bind = function (n, r) { var t, e; if (_ && n.bind === _) return _.apply(n, f.call(arguments, 1)); if (!j.isFunction(n)) throw new TypeError; t = f.call(arguments, 2); return e = function () { if (!(this instanceof e)) return n.apply(r, t.concat(f.call(arguments))); R.prototype = n.prototype; var u = new R; R.prototype = null; var i = n.apply(u, t.concat(f.call(arguments))); if (Object(i) === i) return i; return u } }; j.partial = function (n) { var r = f.call(arguments, 1); return function () { var t = 0; var e = r.slice(); for (var u = 0, i = e.length; u < i; u++)if (e[u] === j) e[u] = arguments[t++]; while (t < arguments.length) e.push(arguments[t++]); return n.apply(this, e) } }; j.bindAll = function (n) { var r = f.call(arguments, 1); if (0 === r.length) throw new Error("bindAll must be passed function names"); A(r, function (r) { n[r] = j.bind(n[r], n) }); return n }; j.memoize = function (n, r) { var t = {}; r || (r = j.identity); return function () { var e = r.apply(this, arguments); return j.has(t, e) ? t[e] : t[e] = n.apply(this, arguments) } }; j.delay = function (n, r) { var t = f.call(arguments, 2); return setTimeout(function () { return n.apply(null, t) }, r) }; j.defer = function (n) { return j.delay.apply(j, [n, 1].concat(f.call(arguments, 1))) }; j.throttle = function (n, r, t) { var e, u, i; var a = null; var f = 0; t || (t = {}); var l = function () { f = false === t.leading ? 0 : j.now(); a = null; i = n.apply(e, u); e = u = null }; return function () { var o = j.now(); if (!f && false === t.leading) f = o; var c = r - (o - f); e = this; u = arguments; if (c <= 0) { clearTimeout(a); a = null; f = o; i = n.apply(e, u); e = u = null } else if (!a && false !== t.trailing) a = setTimeout(l, c); return i } }; j.debounce = function (n, r, t) { var e, u, i, a, f; var l = function () { var o = j.now() - a; if (o < r) e = setTimeout(l, r - o); else { e = null; if (!t) { f = n.apply(i, u); i = u = null } } }; return function () { i = this; u = arguments; a = j.now(); var o = t && !e; if (!e) e = setTimeout(l, r); if (o) { f = n.apply(i, u); i = u = null } return f } }; j.once = function (n) { var r = false, t; return function () { if (r) return t; r = true; t = n.apply(this, arguments); n = null; return t } }; j.wrap = function (n, r) { return j.partial(r, n) }; j.compose = function () { var n = arguments; return function () { var r = arguments; for (var t = n.length - 1; t >= 0; t--)r = [n[t].apply(this, r)]; return r[0] } }; j.after = function (n, r) { return function () { if (--n < 1) return r.apply(this, arguments) } }; j.keys = function (n) { if (!j.isObject(n)) return []; if (x) return x(n); var r = []; for (var t in n) if (j.has(n, t)) r.push(t); return r }; j.values = function (n) { var r = j.keys(n); var t = r.length; var e = new Array(t); for (var u = 0; u < t; u++)e[u] = n[r[u]]; return e }; j.pairs = function (n) { var r = j.keys(n); var t = r.length; var e = new Array(t); for (var u = 0; u < t; u++)e[u] = [r[u], n[r[u]]]; return e }; j.invert = function (n) { var r = {}; var t = j.keys(n); for (var e = 0, u = t.length; e < u; e++)r[n[t[e]]] = t[e]; return r }; j.functions = j.methods = function (n) { var r = []; for (var t in n) if (j.isFunction(n[t])) r.push(t); return r.sort() }; j.extend = function (n) { A(f.call(arguments, 1), function (r) { if (r) for (var t in r) n[t] = r[t] }); return n }; j.pick = function (n) { var r = {}; var t = l.apply(e, f.call(arguments, 1)); A(t, function (t) { if (t in n) r[t] = n[t] }); return r }; j.omit = function (n) { var r = {}; var t = l.apply(e, f.call(arguments, 1)); for (var u in n) if (!j.contains(t, u)) r[u] = n[u]; return r }; j.defaults = function (n) { A(f.call(arguments, 1), function (r) { if (r) for (var t in r) if (n[t] === void 0) n[t] = r[t] }); return n }; j.clone = function (n) { if (!j.isObject(n)) return n; return j.isArray(n) ? n.slice() : j.extend({}, n) }; j.tap = function (n, r) { r(n); return n }; var S = function (n, r, t, e) { if (n === r) return 0 !== n || 1 / n == 1 / r; if (null == n || null == r) return n === r; if (n instanceof j) n = n._wrapped; if (r instanceof j) r = r._wrapped; var u = o.call(n); if (u != o.call(r)) return false; switch (u) { case "[object String]": return n == String(r); case "[object Number]": return n != +n ? r != +r : 0 == n ? 1 / n == 1 / r : n == +r; case "[object Date]": case "[object Boolean]": return +n == +r; case "[object RegExp]": return n.source == r.source && n.global == r.global && n.multiline == r.multiline && n.ignoreCase == r.ignoreCase }if ("object" != typeof n || "object" != typeof r) return false; var i = t.length; while (i--) if (t[i] == n) return e[i] == r; var a = n.constructor, f = r.constructor; if (a !== f && !(j.isFunction(a) && a instanceof a && j.isFunction(f) && f instanceof f) && "constructor" in n && "constructor" in r) return false; t.push(n); e.push(r); var l = 0, c = true; if ("[object Array]" == u) { l = n.length; c = l == r.length; if (c) while (l--) if (!(c = S(n[l], r[l], t, e))) break } else { for (var s in n) if (j.has(n, s)) { l++; if (!(c = j.has(r, s) && S(n[s], r[s], t, e))) break } if (c) { for (s in r) if (j.has(r, s) && !l--) break; c = !l } } t.pop(); e.pop(); return c }; j.isEqual = function (n, r) { return S(n, r, [], []) }; j.isEmpty = function (n) { if (null == n) return true; if (j.isArray(n) || j.isString(n)) return 0 === n.length; for (var r in n) if (j.has(n, r)) return false; return true }; j.isElement = function (n) { return !!(n && 1 === n.nodeType) }; j.isArray = b || function (n) { return "[object Array]" == o.call(n) }; j.isObject = function (n) { return n === Object(n) }; A(["Arguments", "Function", "String", "Number", "Date", "RegExp"], function (n) { j["is" + n] = function (r) { return o.call(r) == "[object " + n + "]" } }); if (!j.isArguments(arguments)) j.isArguments = function (n) { return !!(n && j.has(n, "callee")) }; if ("function" !== typeof /./) j.isFunction = function (n) { return "function" === typeof n }; j.isFinite = function (n) { return isFinite(n) && !isNaN(parseFloat(n)) }; j.isNaN = function (n) { return j.isNumber(n) && n != +n }; j.isBoolean = function (n) { return true === n || false === n || "[object Boolean]" == o.call(n) }; j.isNull = function (n) { return null === n }; j.isUndefined = function (n) { return n === void 0 }; j.has = function (n, r) { return c.call(n, r) }; j.noConflict = function () { n._ = r; return this }; j.identity = function (n) { return n }; j.constant = function (n) { return function () { return n } }; j.property = function (n) { return function (r) { return r[n] } }; j.matches = function (n) { return function (r) { if (r === n) return true; for (var t in n) if (n[t] !== r[t]) return false; return true } }; j.times = function (n, r, t) { var e = Array(Math.max(0, n)); for (var u = 0; u < n; u++)e[u] = r.call(t, u); return e }; j.random = function (n, r) { if (null == r) { r = n; n = 0 } return n + Math.floor(Math.random() * (r - n + 1)) }; j.now = Date.now || function () { return (new Date).getTime() }; var T = { escape: { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;" } }; T.unescape = j.invert(T.escape); var I = { escape: new RegExp("[" + j.keys(T.escape).join("") + "]", "g"), unescape: new RegExp("(" + j.keys(T.unescape).join("|") + ")", "g") }; j.each(["escape", "unescape"], function (n) { j[n] = function (r) { if (null == r) return ""; return ("" + r).replace(I[n], function (r) { return T[n][r] }) } }); j.result = function (n, r) { if (null == n) return void 0; var t = n[r]; return j.isFunction(t) ? t.call(n) : t }; j.mixin = function (n) { A(j.functions(n), function (r) { var t = j[r] = n[r]; j.prototype[r] = function () { var n = [this._wrapped]; a.apply(n, arguments); return z.call(this, t.apply(j, n)) } }) }; var N = 0; j.uniqueId = function (n) { var r = ++N + ""; return n ? n + r : r }; j.templateSettings = { evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g }; var q = /(.)^/; var B = { "'": "'", "\\": "\\", "\r": "r", "\n": "n", "	": "t", "\u2028": "u2028", "\u2029": "u2029" }; var D = /\\|'|\r|\n|\t|\u2028|\u2029/g; j.template = function (n, r, t) { var e; t = j.defaults({}, t, j.templateSettings); var u = new RegExp([(t.escape || q).source, (t.interpolate || q).source, (t.evaluate || q).source].join("|") + "|$", "g"); var i = 0; var a = "__p+='"; n.replace(u, function (r, t, e, u, f) { a += n.slice(i, f).replace(D, function (n) { return "\\" + B[n] }); if (t) a += "'+\n((__t=(" + t + "))==null?'':_.escape(__t))+\n'"; if (e) a += "'+\n((__t=(" + e + "))==null?'':__t)+\n'"; if (u) a += "';\n" + u + "\n__p+='"; i = f + r.length; return r }); a += "';\n"; if (!t.variable) a = "with(obj||{}){\n" + a + "}\n"; a = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n"; try { e = new Function(t.variable || "obj", "_", a) } catch (f) { f.source = a; throw f } if (r) return e(r, j); var l = function (n) { return e.call(this, n, j) }; l.source = "function(" + (t.variable || "obj") + "){\n" + a + "}"; return l }; j.chain = function (n) { return j(n).chain() }; var z = function (n) { return this._chain ? j(n).chain() : n }; j.mixin(j); A(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (n) { var r = e[n]; j.prototype[n] = function () { var t = this._wrapped; r.apply(t, arguments); if (("shift" == n || "splice" == n) && 0 === t.length) delete t[0]; return z.call(this, t) } }); A(["concat", "join", "slice"], function (n) { var r = e[n]; j.prototype[n] = function () { return z.call(this, r.apply(this._wrapped, arguments)) } }); j.extend(j.prototype, { chain: function () { this._chain = true; return this }, value: function () { return this._wrapped } }); if ("function" === typeof define && define.amd) define("underscore", [], function () { return j }) }).call(this);